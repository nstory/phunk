<?php
// generate_phunk_object.php
// This script transforms Phunk.php into PhunkObject.php.

require_once(__DIR__ . '/../vendor/autoload.php');

$phunk = new \ReflectionClass('Nstory\Phunk\Phunk');
$methods = $phunk->getMethods();
echo "<?php\n";
?>
// this file is generated by scripts/generate_phunk_object.php
// all the signatures in Phunk are replicated here -- allowing them
// to be parsed by IDE auto-completion
// DO NOT EDIT THIS FILE

namespace Nstory\Phunk;

class PhunkObject
{
<?php foreach ($methods as $m): ?>
    public function <?= $m->getName() ?>(
        <?php foreach (array_slice($m->getParameters(), 1) as $p): ?>
        <?= parameter($p) ?>
       <?= $p->getPosition() < $m->getNumberOfParameters()-1 ? ',' : '' ?>
        <?php endforeach; ?>
    ) {
        return Phunk::<?= $m->getName() ?>(
            $this->array,
            <?php foreach (array_slice($m->getParameters(), 1) as $p): ?>
            $<?= $p->getName(); ?>
           <?= $p->getPosition() < $m->getNumberOfParameters()-1 ? ',' : '' ?>
            <?php endforeach ?>
        );
    }

<?php endforeach ?>
}
<?php

// helper functions
function parameter(\ReflectionParameter $p)
{
    $text = '$' . $p->getName();
    if ($p->isOptional()) {
        $text .= ' = ' . var_export($p->getDefaultValue(), true);
    }
    return $text;
}
